# .github/workflows/ci-cd.yml
name: Portfolio CI/CD

on:
    push:
        branches:
            - '**'
    pull_request:
        branches:
            - main

jobs:
    lint-and-format:
        name: Lint & Format & Type Check
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 18
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Prettier Check
              run: npm run format:check

            - name: ESLint Check
              run: npm run lint:check

            - name: TypeScript Check
              run: npm run type-check

    build:
        name: Build Next.js App
        runs-on: ubuntu-latest
        needs: lint-and-format

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 18
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Build project
              run: npm run build

    deploy:
        name: Deploy to Vercel via CLI
        runs-on: ubuntu-latest
        needs: build
        # Only deploy on pushes & PR merges to 'main' &&  Ignore auto-push from bots...
        if: github.ref == 'refs/heads/main' && !contains(github.actor, 'vercel') && !contains(github.actor, 'dependabot[bot]') && !contains(github.actor, 'github-actions[bot]')

        steps:
            # - name: Trigger Vercel Deployment
            #   run: curl -X POST "${{ secrets.VERCEL_DEPLOY_HOOK }}"

            - name: Checkout code
              uses: actions/checkout@v3

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 18

            - name: Install Vercel CLI
              run: npm install -g vercel

            - name: Deploy to Vercel
              run: npx vercel --prod --token=$VERCEL_TOKEN --scope=$VERCEL_ORG_ID --confirm --yes
              env:
                  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
                  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
                  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
